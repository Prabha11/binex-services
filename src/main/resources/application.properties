server.port=8085

#spring.security.oauth2.client.registration.google.client-id=387772720948-8cn4vr3cvdg9fq7mdimh95it8v2ct0t2.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=IhvyY5SMqUzP1oggMEPaV4vF
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8085/api/v1/

#spring.datasource.url = jdbc:mysql://localhost:3306/outlier_handler?useSSL=false
#spring.datasource.username = root
#spring.datasource.password =
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update


spring.datasource.url = data/database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
spring.datasource.driverClassName= org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto = update


# MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled=true 
# Enable support of multi-part uploads.
# spring.http.multipart.file-size-threshold=3 # Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.location= /
# Intermediate location of uploaded files.
spring.servlet.multipart.max-file-size=10MB
# Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.max-request-size=11MB
# Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.resolve-lazily=false 
# Whether to resolve the multipart request lazily at the time of file or parameter access.
